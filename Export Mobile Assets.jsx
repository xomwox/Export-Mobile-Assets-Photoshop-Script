// Output iOS & Android Assets.jsx// 2014 Rwasn www.twitter.com/rwasn// License: none (public domain)// Photoshop CS6 only (32 & 64bit)// v1.0//// The original script was made by Todd Linkner// The modified version was made by Jacopo Labardi //// This script outputs iOS & Android PNG assets from XHDPI/RETINA source files in PSD or PNG format. // The resulting PNGs will be placed in sub-folders within your target folder./*// BEGIN__HARVEST_EXCEPTION_ZSTRING<javascriptresource><name>$$$/JavaScripts/MobileAssets/MenuAlt=Export iOS & Android Assets</name><category>mobile</category></javascriptresource>// END__HARVEST_EXCEPTION_ZSTRING*/// open Photoshop#target "photoshop"main();function main() {    // Ask user for source deletion    var cleanup = confirm("iOS & Android Assets\r\r"                        + "Do you want to delete your original files after process?");    if (cleanup) {       var cleanup2 = confirm("Are you sure you want to delete your .PSD SOURCE files?"); }        // Ask user which format for source files    var sformat = confirm("Which is the extension of the source files? \r\r"                                     +"Yes = PSD\r"                                     +"No = PNG")        // Ask user for input folder	var inputFolder = Folder.selectDialog("Select a folder to process");	if (inputFolder == null) {       alert ("No folder selected. Exting script.","Error!");       return (0);       }	// get all PSD files in the input folder    if (sformat) var fileList = inputFolder.getFiles("*.psd");    else var fileList = inputFolder.getFiles("*.png")	// Make output Android folders (LDPI,MDPI,HDPI,XHDPI)	var dirxhdpi = Folder(inputFolder+"/android/res/drawable-xhdpi");	if(!dirxhdpi.exists) dirxhdpi.create();	var dirhdpi = Folder(inputFolder+"/android/res/drawable-hdpi");	if(!dirhdpi.exists) dirhdpi.create();	var dirmdpi = Folder(inputFolder+"/android/res/drawable-mdpi");	if(!dirmdpi.exists) dirmdpi.create();	var dirldpi = Folder(inputFolder+"/android/res/drawable-ldpi");	if(!dirldpi.exists) dirldpi.create();    // Make output iOS folders (IPHONE,IPHONE RETINA,IPAD,IPAD RETINA)    var diriphone = Folder(inputFolder+"/ios/iphone/");    if(!diriphone.exists) diriphone.create();    var diriphone2x = Folder(inputFolder+"/ios/iphone_retina/");    if(!diriphone2x.exists) diriphone2x.create();            var diripad = Folder(inputFolder+"/ios/ipad/");    if(!diripad.exists) diripad.create();    var diripad2x = Folder(inputFolder+"/ios/ipad_retina/");    if(!diripad2x.exists) diripad2x.create();	// Open each file in turn	for (var i = 0; i < fileList.length; i++) {		// Open file		open(fileList[i]);        // BASELINE XHDPI/RETINA 100%		// Android         // Make XHDPI		resize(dirxhdpi,'112.5%');		// Make HDPI		resize(dirhdpi,'75%');		// Make MDPI		resize(dirmdpi,'50%');		// Make LDPI		resize(dirldpi,'37.5%');                // iOS         // Make IPHONE        resize(diriphone,'50%');        // Make IPHONE RETINA        resize(diriphone2x);        // Make IPAD        resize(diripad,'70%');        // Make IPAD RETINA        resize(diripad2x,'140%');        // Close and do not save		app.activeDocument.close(SaveOptions.DONOTSAVECHANGES);		        // Delete the original if required		if (cleanup2) fileList[i].remove();	}    alert("Job Done!","Success");                function resize(dir,percent) {                var ShowExtension = "n";         // Setup file name        var fname = app.activeDocument.name.replace(/\s+/g, '_').replace(/([a-z\d])([A-Z])/g, '$1_$2').toLowerCase();        di=(fname).indexOf(".");        fname2 = (fname).substr(0, di);         //use extension if set         if ( ShowExtension == "y" )         {             fname2 = fname         }         // Set export options        var opts, file;        opts = new ExportOptionsSaveForWeb();        opts.format = SaveDocumentType.PNG        opts.transparency = true;        opts.blur = 0.0        opts.interlaced = false;        opts.optimized = true;        opts.includeProfile = false;        opts.quality = 100         opts.PNG8 = false;         // Duplicate, resize and export        var tempfile = app.activeDocument.duplicate();        if (percent != undefined) tempfile.resizeImage(percent,percent);             if (dir === diriphone2x) {            file = new File(dir+"/"+fname2+"@2x.png");        } else if (dir === diripad) {            file = new File(dir+"/"+fname2+"~ipad.png");        } else if (dir === diripad2x) {            file = new File(dir+"/"+fname2+"@2x~ipad.png");        } else {            file = new File(dir+"/"+fname2+".png");        }        tempfile.exportDocument(file, ExportType.SAVEFORWEB, opts);        tempfile.close(SaveOptions.DONOTSAVECHANGES);    }}